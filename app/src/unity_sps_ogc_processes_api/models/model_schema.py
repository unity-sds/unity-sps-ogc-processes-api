# coding: utf-8

"""
    OGC API - Processes

    Example API Definition for OGC API - Processes

    The version of the OpenAPI document: 0.1
    Contact: info@ogc.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations

import json
import pprint
from typing import Any, Dict, Union

from pydantic import RootModel, ValidationError, model_validator
from unity_sps_ogc_processes_api.models.reference import Reference
from unity_sps_ogc_processes_api.models.schema_one_of import SchemaOneOf


class ModelSchema(RootModel):
    root: Union[Reference, SchemaOneOf]

    @model_validator(mode="before")
    @classmethod
    def validate_type(cls, value):
        if isinstance(value, dict):
            try:
                return Reference(**value)
            except ValidationError:
                try:
                    return SchemaOneOf(**value)
                except ValidationError:
                    pass
        elif isinstance(value, (Reference, SchemaOneOf)):
            return value
        raise ValueError(f"Invalid type for ModelSchema: {type(value)}")

    @classmethod
    def from_dict(cls, obj: Dict[str, Any]) -> ModelSchema:
        return cls(root=cls.validate_type(obj))

    @classmethod
    def from_json(cls, json_str: str) -> ModelSchema:
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        return self.root.model_dump()

    def to_json(self) -> str:
        return json.dumps(self.to_dict())

    def __getattr__(self, name: str) -> Any:
        return getattr(self.root, name)

    def __repr__(self) -> str:
        return f"ModelSchema({self.root!r})"

    def to_str(self) -> str:
        return pprint.pformat(self.model_dump())
